---
- name: Fail if release is not set
  fail:
    msg: "No release specified"
  when: release is undefined 

- name: set release path
  set_fact:
    release_file_path: "{{ inventory_dir }}/../{{ deploy_release_file }}"

- name: debug
  debug: msg="{{ release_file_path }}"

- name: Check for release file
  local_action: stat path={{ release_file_path }}
  register: release_file_stat
  become: no

- name: Fail if release File does not exist
  fail:
    msg: "Release File does not exist"
  when: not release_file_stat.stat.exists

- name: Initialize the deploy root and gather facts
  deploy_helper: path='{{ deploy_path }}'

- name: create new release directory
  file: path={{ deploy_helper.new_release_path }} state=directory mode=0775 owner={{ deploy_owner }} group={{ deploy_group }} recurse=true
  become_user: root
 
- name: unarchive release
  unarchive: copy=yes src="{{ release_file_path }}" dest="{{ deploy_helper.new_release_path }}"

- name: Add an unfinished file, to allow cleanup on successful finalize
  file: path={{ deploy_helper.new_release_path }}/{{ deploy_helper.unfinished_filename }} state=touch

- name: Create some folders in the shared folder
  file: path='{{ deploy_helper.shared_path }}/{{ item.src }}' state=directory owner={{ deploy_owner }} group={{ deploy_group }}
  with_items: "{{ deploy_shared_folders }}"

- name: Add symlinks from the new release to the shared folder
  file: path='{{ deploy_helper.new_release_path }}/{{ item.path }}'
        src='{{ deploy_helper.shared_path }}/{{ item.src }}'
        state=link
        owner={{ deploy_owner }}
        group={{ deploy_group }}
  with_items: "{{ deploy_shared_folders }}"

- name: Finalize the deploy, removing the unfinished file and switching the symlink
  deploy_helper: path='{{ deploy_path }}' release={{ deploy_helper.new_release }} state=finalize